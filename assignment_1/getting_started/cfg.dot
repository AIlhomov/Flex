digraph CFG {
graph [splines=ortho];
node [shape=box];
Main -> block_1;
Main [label="Main\n @Param: 100\n__t0 := CALL Sum: Sum.calcSum\nPRINT __t0\nEXIT\n"];
block_1 -> whileCondition_2;
block_1 [label="block_1\nENTRY Sum.calcSum\nsum := 0\nLABEL whileCondition_2\n"];
whileCondition_2 -> whileBody_3 [xlabel="true"];
whileCondition_2 -> whileExit_4 [xlabel="false"];
whileCondition_2 [label="whileCondition_2\n__t3 := 0 < num\nif __t3 goto whileBody_3 else goto whileExit_4\n"];
whileBody_3 -> whileCondition_5;
whileBody_3 [label="whileBody_3\nLABEL whileCondition_5\n"];
whileExit_4 -> block_14;
whileExit_4 [label="whileExit_4\nLABEL whileExit_4\nRETURN sum\n"];
whileCondition_5 -> whileBody_6 [xlabel="true"];
whileCondition_5 -> whileExit_7 [xlabel="false"];
whileCondition_5 [label="whileCondition_5\n__t5 := 0 < num\nif __t5 goto whileBody_6 else goto whileExit_7\n"];
whileBody_6 -> whileCondition_8;
whileBody_6 [label="whileBody_6\nLABEL whileCondition_8\n"];
whileExit_7 -> whileCondition_2;
whileExit_7 [label="whileExit_7\nLABEL whileExit_7\ngoto whileCondition_2\n"];
whileCondition_8 -> whileBody_9 [xlabel="true"];
whileCondition_8 -> whileExit_10 [xlabel="false"];
whileCondition_8 [label="whileCondition_8\n__t7 := 0 < num\nif __t7 goto whileBody_9 else goto whileExit_10\n"];
whileBody_9 -> block_11 [xlabel="true"];
whileBody_9 -> block_12 [xlabel="false"];
whileBody_9 [label="whileBody_9\n__t10 := 50 < num\n__t12 := sum < 2000\n__t9 := __t10 && __t12\nif __t9 goto block_12 else goto block_11\n"];
whileExit_10 -> whileCondition_5;
whileExit_10 [label="whileExit_10\nLABEL whileExit_10\ngoto whileCondition_5\n"];
block_11 -> block_13;
block_11 [label="block_11\nPRINT sum\ngoto block_13\n"];
block_12 -> block_13;
block_12 [label="block_12\nLABEL block_12\nPRINT num\ngoto block_13\n"];
block_13 -> whileCondition_8;
block_13 [label="block_13\nLABEL block_13\n__t14 := sum + num\nsum := __t14\n__t16 := num - 1\nnum := __t16\ngoto whileCondition_8\n"];
block_14 -> whileCondition_15;
block_14 [label="block_14\nENTRY Sum.calcSum1\nsum := 0\nLABEL whileCondition_15\n"];
whileCondition_15 -> whileBody_16 [xlabel="true"];
whileCondition_15 -> whileExit_17 [xlabel="false"];
whileCondition_15 [label="whileCondition_15\n__t18 := 0 < num\nif __t18 goto whileBody_16 else goto whileExit_17\n"];
whileBody_16 -> whileCondition_18;
whileBody_16 [label="whileBody_16\nLABEL whileCondition_18\n"];
whileExit_17 -> block_27;
whileExit_17 [label="whileExit_17\nLABEL whileExit_17\nRETURN sum\n"];
whileCondition_18 -> whileBody_19 [xlabel="true"];
whileCondition_18 -> whileExit_20 [xlabel="false"];
whileCondition_18 [label="whileCondition_18\n__t20 := 0 < num\nif __t20 goto whileBody_19 else goto whileExit_20\n"];
whileBody_19 -> whileCondition_21;
whileBody_19 [label="whileBody_19\nLABEL whileCondition_21\n"];
whileExit_20 -> whileCondition_15;
whileExit_20 [label="whileExit_20\nLABEL whileExit_20\ngoto whileCondition_15\n"];
whileCondition_21 -> whileBody_22 [xlabel="true"];
whileCondition_21 -> whileExit_23 [xlabel="false"];
whileCondition_21 [label="whileCondition_21\n__t22 := 0 < num\nif __t22 goto whileBody_22 else goto whileExit_23\n"];
whileBody_22 -> whileCondition_24;
whileBody_22 [label="whileBody_22\nLABEL whileCondition_24\n"];
whileExit_23 -> whileCondition_18;
whileExit_23 [label="whileExit_23\nLABEL whileExit_23\ngoto whileCondition_18\n"];
whileCondition_24 -> whileBody_25 [xlabel="true"];
whileCondition_24 -> whileExit_26 [xlabel="false"];
whileCondition_24 [label="whileCondition_24\n__t24 := 0 < num\nif __t24 goto whileBody_25 else goto whileExit_26\n"];
whileBody_25 -> whileCondition_24;
whileBody_25 [label="whileBody_25\n__t26 := sum + num\nsum := __t26\n__t28 := num - 1\nnum := __t28\ngoto whileCondition_24\n"];
whileExit_26 -> whileCondition_21;
whileExit_26 [label="whileExit_26\nLABEL whileExit_26\ngoto whileCondition_21\n"];
block_27 -> block_28 [xlabel="true"];
block_27 -> block_29 [xlabel="false"];
block_27 [label="block_27\nENTRY Sum.calcSum2\nsum := 0\n__t31 := 50 < num\n__t33 := sum < 2000\n__t30 := __t31 && __t33\nif __t30 goto block_29 else goto block_28\n"];
block_28 -> block_31 [xlabel="true"];
block_28 -> block_32 [xlabel="false"];
block_28 [label="block_28\n__t36 := 50 < num\n__t38 := sum < 2000\n__t35 := __t36 && __t38\nif __t35 goto block_32 else goto block_31\n"];
block_29 -> block_30;
block_29 [label="block_29\nLABEL block_29\nPRINT num\ngoto block_30\n"];
block_30 [label="block_30\nLABEL block_30\nRETURN sum\n"];
block_31 -> block_34 [xlabel="true"];
block_31 -> block_35 [xlabel="false"];
block_31 [label="block_31\n__t41 := 50 < num\n__t43 := sum < 2000\n__t40 := __t41 && __t43\nif __t40 goto block_35 else goto block_34\n"];
block_32 -> block_33;
block_32 [label="block_32\nLABEL block_32\nPRINT num\ngoto block_33\n"];
block_33 -> block_30;
block_33 [label="block_33\nLABEL block_33\ngoto block_30\n"];
block_34 -> block_36;
block_34 [label="block_34\nPRINT sum\ngoto block_36\n"];
block_35 -> block_36;
block_35 [label="block_35\nLABEL block_35\nPRINT num\ngoto block_36\n"];
block_36 -> block_33;
block_36 [label="block_36\nLABEL block_36\ngoto block_33\n"];
}
